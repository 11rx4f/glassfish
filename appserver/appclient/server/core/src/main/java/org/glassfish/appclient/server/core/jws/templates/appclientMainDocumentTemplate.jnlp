<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<jnlp
    spec="1.0+"
    codebase="${request.scheme}://${request.host}:${request.port}${app.codebase.path}"
    href="${request.adapter.context.root}${main.jnlp.path}${request.query.string}">
    <information>
        <title>Bad template</title>
        <vendor>${appclient.vendor}</vendor>
        <homepage href="${appclient.information.homepage.filepath}"/>
        <description kind="one-line">${appclient.information.description.one-line}</description>
        <description kind="short">${appclient.information.description.short}</description>
        ${appclient.information.images}
    <offline-allowed/>
    </information>

    <security>
        <all-permissions/>
    </security>

    <resources>
        <java version="1.6+" javaagent="${request.scheme}://${request.host}:$request.port}${system.context.root}/${agent.jar}=${agent.args}" ${request.vmargs}/>


        <!--
            Refer to extension JNLP documents which list other resources - JARs and JNLPs.

            The system extension lists the JARs that are common to all apps.  The
            facade extension lists the generated facade JAR file for the client.
            The client extension lists the client JAR.  The library extension
            lists JARs from the EAR application to which the client directly
            or indirectly refers.
        -->
        <extension name="___system" href="${request.scheme}://${request.host}:${request.port}${system.context.root}/${system.jnlp}"/>
        <extension name="___facade" href="${client.facade.jnlp.path}"/>
        <extension name="___client" href="${client.jnlp.path}"/>

        ${app.library.extension}

        <!--
            Properties specified on the request as query parameters (if any)
        -->
        ${request.properties}

    <!--
        Turn on fine logging by default to help with diagnosis.  Users will not
        usually see the output anyway.
    -->
    <property name="jakarta.enterprise.resource.corba.level" value="FINE"/>


<!-- --------------------------------------------------------------------------------------
    The next three properties are set in the jndi.properties file.  Set them
    here so they are detected in the Java Web Start environment.
-->

        <property name="java.naming.factory.initial" value="com.sun.enterprise.naming.SerialInitContextFactory"/>
        <property name="java.naming.factory.url.pkgs" value="com.sun.enterprise.naming"/>

<!--
# Required to add a javax.naming.spi.StateFactory for CosNaming that
# supports dynamic RMI-IIOP.
-->
        <property name="java.naming.factory.state" value="com.sun.corba.ee.impl.presentation.rmi.JNDIStateFactoryImpl"/>
<!-- -------------------------------------------------------------------------------------- ->


        <property name="${appclient.download.host.propertyName}" value="${request.host}"/>

        <property name="${appclient.user.code.is.signed.propertyName}" value="${appclient.user.code.is.signed}"/>

    </resources>

    <application-desc>

        ${appclient.main.class.arguments}

        <!--
            Further arguments may be added dynamically.
        -->
        ${request.arguments}

    </application-desc>

</jnlp>
