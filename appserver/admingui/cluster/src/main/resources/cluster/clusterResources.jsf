<!--

    Copyright (c) 2023 Contributors to the Eclipse Foundation
    Copyright (c) 2010, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!-- cluster/clusterResources.jsf -->

<!initPage
    setResourceBundle(key="i18ncs" bundle="org.glassfish.cluster.admingui.Strings")
    setResourceBundle(key="i18nc" bundle="org.glassfish.common.admingui.Strings")
    setResourceBundle(key="i18n" bundle="org.glassfish.admingui.core.Strings")
    setResourceBundle(key="help_cluster" bundle="org.glassfish.cluster.admingui.Helplinks");
/>
<!composition template="/templates/default.layout" guiTitle="$resource{i18ncs.cluster.ResourcesTitle}" >
<!define name="content">
    <event>
    <!beforeCreate
        setSessionAttribute(key="clusterTabs" value="clusterResources");
        getRequestValue(key="clusterName" value="#{pageSession.target}");
        setPageSessionAttribute(key="clusterName" value="#{pageSession.target}");
        urlencode(value="#{pageSession.target}" encoding="UTF-8" result="#{pageSession.encodedClusterName}");
        gf.isClusterName(clusterName="#{pageSession.clusterName}" exists="#{requestScope.exists}" );
        if (! #{requestScope.exists}){
            gf.redirect("#{request.contextPath}/cluster/cluster/clusters.jsf");
        }
        setPageSessionAttribute(key="confirmDeleteMsg" value="$resource{i18n.msg.JS.confirmDeleteResources}");
        setPageSessionAttribute(key="listLink" value="#{request.contextPath}/cluster/cluster/clusterResources.jsf?clusterName=#{encodedClusterName}");
        getRequestValue(key="filterValue" value="#{pageSession.filterValue}");
        setPageSessionAttribute(key="restURL" value="#{sessionScope.REST_URL}/clusters/cluster/#{pageSession.encodedClusterName}/resource-ref");
    />
    
    </event>
<sun:form id="propertyForm">

#include "/cluster/cluster/clusterTabs.inc"
#include "/common/shared/alertMsg_1.inc"

<sun:title id="propertyContentPage" title="$resource{i18ncs.cluster.ResourcesTitle}"
                 helpText="$resource{i18ncs.cluster.ResourcesTitleHelp}" >
</sun:title>
"<br/>
#include "/common/shared/nameSection.inc"
#include "/common/resourceNode/targetResourceTable.inc"
<!--#include "/common/shared/nameSection.inc"
<sun:table id="table1" title="$resource{i18n.resourcesTable.resources}"  >
         <!afterCreate
            getClientId(component="$this{component}" clientId=>$page{tableId});
        />
    <!facet actionsTop>
         <sun:panelGroup id="topActionsGroup1">
            <!afterCreate
                getClientId(component="$this{component}" clientId=>$page{topActionGroup});
            />
            <sun:button id="button1" text="$resource{i18n.button.Enable}" disabled="#{true}" >
            <!command
            />
            </sun:button>

            <sun:button id="button2" text="$resource{i18n.button.Disable}" disabled="#{true}" primary="#{false}">
            <!command
            />
            </sun:button>

            <sun:dropDown id="actions" selected="#{actionValue}" submitForm="#{true}" immediate="#{true}"
                labels={""}
                values={""} >
                <!command
                />
            </sun:dropDown>

            <sun:dropDown id="filter" selected="#{filterValue}" label="$resource{i18n.common.filterDropDown}" submitForm="#{true}" immediate="#{true}"
                    values="${values}"  labels="${labels}">
                <!command
                />
            </sun:dropDown>
         </sun:panelGroup>
     </facet>

   <sun:tableRowGroup id="rowGroup1" selected="#{td.value.selected}" data={"$attribute{listOfRows}"} sourceVar="td">
    <!afterCreate
         getClientId(component="$this{component}" clientId=>$page{tableRowGroupId});
    />
   <sun:tableColumn headerText="$resource{i18n.common.SelectHeader}" selectId="select" rowHeader="$boolean{false}" id="col0">
        <sun:checkbox id="select"
            selected="#{td.value.selected}"
            selectedValue="$boolean{true}"
            onClick="setTimeout('initAllRows(); changeTwoTableButtons()', 0)"
        />
   </sun:tableColumn>

    <sun:tableColumn headerText="$resource{i18n.common.ResourceName}"  sort="name" rowHeader="$boolean{true}" extrahtml="nowrap" id="col1">
        <sun:hyperlink id="link" text="#{td.value.name}" url="#{td.value.link}" />
    </sun:tableColumn>

   <sun:tableColumn headerText="$resource{i18n.common.Enabled}"  sort="enabled" rowHeader="$boolean{true}" id="enabled">
        <staticText id="enabled" value="#{td.value.enabled}" />
    </sun:tableColumn>

    <sun:tableColumn headerText="$resource{i18n.common.Type}"  sort="resType" rowHeader="$boolean{true}" id="resType">
        <staticText id="resType" value="#{td.value.resType}" />
    </sun:tableColumn>

   </sun:tableRowGroup>

</sun:table>-->



<sun:hidden id="helpKey" value="$resource{help_cluster.clusterResources}" />
    </sun:form>
#include "/common/shared/changeButtonsJS.inc"
</define>
</composition>


