#
# Copyright (c) 2011, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

injection-manager.no-descriptor-registered-for-invocation=No descriptor registered for current invocation: {0}
injection-manager.no-descriptor-registered-for-component=No descriptor registered for componentId: {0}
injection-manager.null-invocation-context=Null invocation context
injection-manager.error-creating-managed-object=Error creating managed object for class: {0}
injection-manager.illegal-use-of-static-field=Illegal use of static field on class that only supports instance-based injection: {0}
injection-manager.appclient-injected-field-must-be-static=Injected field: {0} on Application Client class: {1} must be declared static
injection-manager.injecting-dependency-field=Injecting dependency with logical name: {0} into field: {1} on class: {2}
injection-manager.illegal-use-of-static-method=Illegal use of static method on class that only supports instance-based injection: {0}
injection-manager.appclient-injected-method-must-be-static=Injected method: {0} on Application Client class: {1} must be declared static
injection-manager.injecting-dependency-method=Injecting dependency with logical name: {0} into method: {1} on class: {2}
injection-manager.exception-to-inject=Exception attempting to inject {0} into {1}: {2}
injection-manager.exception-invoke-lifecycle-method=Exception attempting invoke lifecycle method: {0}
injection-manager.calling-lifecycle-method=Calling lifecycle method: {0} on class: {1}
injection-manager.field-not-found=InjectionManager exception.  Field: {0} not found in class: {1}
injection-manager.method-not-found=InjectionManager exception.  Method: void {0} ({1}) not found in class: {2}
injection-manager.postconstruct-not-found=InjectionManager exception. PostConstruct method: {0} not found in class: {1}
injection-manager.predestroy-not-found=InjectionManager exception. PreDestroy method: {0} not found in class: {1}

